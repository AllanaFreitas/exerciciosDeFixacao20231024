-- 1 
DELIMITER $$
CREATE TRIGGER insereClienteAuditoria AFTER INSERT ON Clientes
FOR EACH ROW
BEGIN
    INSERT INTO Auditoria (mensagem) VALUES (CONCAT('Novo cliente inserido em ', NOW()));
END;
$$
DELIMITER ;


-- 2
DELIMITER $$
CREATE TRIGGER tentativaExclusaoCliente AFTER DELETE ON Clientes
FOR EACH ROW
BEGIN
    INSERT INTO Auditoria (mensagem) VALUES (CONCAT('Tentativa de exclusão de cliente ID ', OLD.id, ' em ', NOW()));
END;
$$
DELIMITER ;

--3
DELIMITER $$
CREATE TRIGGER atualizaNomeCliente BEFORE UPDATE ON Clientes
FOR EACH ROW
BEGIN
    IF NEW.nome IS NULL OR NEW.nome = '' THEN
        INSERT INTO Auditoria (mensagem) VALUES ('Tentativa de atualização de nome vazio ou NULL');
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Nome vazio ou NULL não são permitidos para clientes.';
    ELSE
        INSERT INTO Auditoria (mensagem) VALUES (CONCAT('Nome do cliente ID ', NEW.id, ' atualizado de "', OLD.nome, '" para "', NEW.nome, '" em ', NOW()));
    END IF;
END;
$$
DELIMITER ;

--4 
DELIMITER $$
CREATE TRIGGER atualizaNomeCliente BEFORE UPDATE ON Clientes
FOR EACH ROW
BEGIN
    IF NEW.nome IS NULL OR NEW.nome = '' THEN
        INSERT INTO Auditoria (mensagem) VALUES ('Tentativa de atualização de nome vazio ou NULL');
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Nome vazio ou NULL não são permitidos para clientes.';
    ELSE
        INSERT INTO Auditoria (mensagem) VALUES (CONCAT('Nome do cliente ID ', NEW.id, ' atualizado de "', OLD.nome, '" para "', NEW.nome, '" em ', NOW()));
    END IF;
END;
$$
DELIMITER ;

--5
DELIMITER $$
CREATE TRIGGER inserePedidoAtualizaEstoque AFTER INSERT ON Pedidos
FOR EACH ROW
BEGIN
    UPDATE Produtos
    SET estoque = estoque - NEW.quantidade
    WHERE id = NEW.produto_id;

    IF (SELECT estoque FROM Produtos WHERE id = NEW.produto_id) < 5 THEN
        INSERT INTO Auditoria (mensagem) VALUES (CONCAT('Estoque baixo para o produto ID ', NEW.produto_id, ' em ', NOW()));
    END IF;
END;
$$
DELIMITER ;
